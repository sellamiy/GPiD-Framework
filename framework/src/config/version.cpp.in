#define _PI_DECOMP_VERSION_DEFINITIONS_
#include <gpid/config.hpp>
#include <gpid/version.hpp>

extern const std::string gpid::project_name = "@PROJECT_NAME@";
extern const std::string gpid::project_full_name = "@EXTENDED_PROJECT_NAME@";

extern const std::string gpid::project_version = "@VERSION@";
extern const std::string gpid::project_version_refspec = "@VERSION_GIT_REFSPEC@";
extern const std::string gpid::project_version_commit  = "@VERSION_GIT_SHA1@";
extern const std::string gpid::project_version_state   = "@VERSION_STATE@";

extern const std::string gpid::project_mode = "@CMAKE_BUILD_TYPE@";

extern const std::string gpid::project_timestamp_configure = "@PROJECT_CFG_TIMESTAMP@";
extern const std::string gpid::project_timestamp_build     = __DATE__ "+" __TIME__;

extern const std::string gpid::list_configured_generators(const std::string separator) {
    std::string listm = "";
#ifdef TRUE_SOLVER_INTERFACE
    listm += separator + "true-solver";
#endif
#ifdef MINISAT_SOLVER_INTERFACE
    listm += separator + "minisat";
#endif
    return listm;
}

extern const std::string gpid::generate_version_message()
{
    return
	project_name
	+ " version " + project_version
	+ "\n"
	+ "configured @" + project_timestamp_configure
	+ "+" + project_mode
        + list_configured_generators("+")
	+ "\n"
	+ "built @" + project_timestamp_build
	;
}
