(size auto)

(lambda eq (l r) (= l r))
(lambda neq (l r) (distinct l r))
(lambda ge (l r) (.>= l r))
(lambda gt (l r) (.> l r))
(lambda le (l r) (.<= l r))
(lambda lt (l r) (.< l r))

(lambda plus (l r) (.+ l r))
(lambda minus (l r) (.- l r))

(declare x0 x1 x2 (of_int RNE 99) (of_int RNE 101) as float)
(reference line ans acc i)
(declare 0 as int)

(apply div (over int int) int2)
(apply div (over int int) int2)

(copy int2 as int)

(apply eq (over int int) bf symmetric)
(apply neq (over int int) bf symmetric)
(apply le (over int int) bf nonself)
(apply lt (over int int) bf nonself)

(extend bf)

