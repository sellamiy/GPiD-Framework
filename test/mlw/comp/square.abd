(size auto)

(declare x count sum as var)
(declare 0 1 2 as const)

(reference count sum)

(lambda power (n m) (power n m))
(lambda sqrt (v) (sqr v))

(lambda eq (l r) (= l r))
(lambda neq (l r) (distinct l r))
(lambda ge (l r) (>= l r))
(lambda gt (l r) (> l r))
(lambda le (l r) (<= l r))
(lambda lt (l r) (< l r))

(lambda iplus (l r) (+ l r))

(apply iplus (over var const) var)

(apply sqrt (over var) sqrtd)

(copy const as var)

(apply eq (over var var) bf symmetric)
(apply le (over var var) bf nonself)
(apply lt (over var var) bf nonself)

(apply eq (over var sqrtd) bf)

(extend bf)
