module DIV0

 use int.Int
 use ref.Ref
 use int.EuclideanDivision
 
 let main (a : int) (d: int) : unit
  requires { a >= 0 /\ d > 0 }
  diverges
  
 = let n = ref a in let x = ref 0 in
   while !n >= d do
    invariant { a = d * !x + !n /\ !n >= 0 }
    n := !n - d;
    x := !x + 1;
   done;
   
   assert { !x = div a d };
   assert { !n = mod a d };
   
end