module List0

 use int.Int
 use ref.Ref
 use list.List
 use list.Length
 use list.Append
 
 val unknown (unit) : bool
 
 let main (n: int) : unit
   requires { n > 0 }
   diverges
   
 = let i = ref 0 in let res = ref Nil in
 
   while !i < n do
     invariant { !i = length !res /\ !i <= n }
     (* Failure reason: Z3 cannot make proof *)
      res := !res ++ Cons !i Nil;
      i := !i + 1
   done;
   
   assert { n = length !res };
   
end
