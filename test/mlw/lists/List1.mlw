module List1

 use int.Int
 use ref.Ref
 use list.List
 use list.Length
 use list.HdTlNoOpt
 use option.Option
 
 val unknown (unit) : bool
 
 let main (unit) : unit
   diverges
   
 = let i = ref 1 in let l = ref (Cons 1 Nil) in
 
   while unknown() do
    invariant { hd !l = !i /\ !i = length !l}
    i := !i + 1;
    l := Cons !i !l
   done;
   
   assert { hd !l = length !l }
   
end
