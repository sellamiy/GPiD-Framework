module Real0

 use int.Int
 use real.RealInfix
 use real.FromInt
 use ref.Ref
 
 let main (unit) (mem : real) (dem : int) : unit
 requires { dem >= 0 }
  diverges
 =
 
 let res = ref 0.0 in
 let i = ref 0 in
 
 while !i < dem do
  invariant { !res = (from_int !i) *. mem /\ !i <= dem }
  res := !res +. mem;
  i := !i + 1
 done;
 
 assert { !res = (from_int dem) *. mem }
 
end