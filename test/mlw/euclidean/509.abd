(size auto)

(declare us vs u v tmp as vars)
(declare us u as gcdleft)
(declare vs v as gcdright)
(reference u v)

(lambda eq (l r) (= l r))
(lambda neq (l r) (distinct l r))
(lambda ge (l r) (>= l r))
(lambda gt (l r) (> l r))
(lambda le (l r) (<= l r))
(lambda lt (l r) (< l r))

(apply le (over vars vars) bf nonself)
(apply lt (over vars vars) bf nonself)

(lambda gcd (a b) (gcd a b))

(apply gcd (over gcdleft gcdright) vars)

(declare 0 as vars)

(apply neq (over vars vars) bf symmetric)
(apply eq (over vars vars) bf symmetric)

(extend bf)

(annotate goal = gcd us vs)
