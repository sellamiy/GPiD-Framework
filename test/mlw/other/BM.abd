(size auto)

(lambda eq (l r) (= l r))
(lambda neq (l r) (distinct l r))
(lambda ge (l r) (>= l r))
(lambda gt (l r) (> l r))
(lambda le (l r) (<= l r))
(lambda lt (l r) (< l r))

(lambda minus (l r) (- l r))
(lambda mult (l r) (* l r))
(lambda plus (l r) (+ l r))
(lambda div (l r) (div l r))
(lambda mod (l r) (mod l r))
(lambda uminus (l) (- l))

(declare a b x y z as int)
(declare z as msum)
(reference x y z)
(declare 0 as int)

(apply mult (over int int) intm symmetric)
(apply plus (over int int) intp symmetric)
(apply plus (over intm msum) int)

(copy intm as int)
(copt intp as int)

(apply eq (over int int) bf symmetric)
(apply neq (over int int) bf symmetric)

(extend bf)

