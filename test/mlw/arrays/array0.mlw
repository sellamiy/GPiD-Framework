module SAIV11

 use int.Int
 use array.Array
 use array.Init
 use ref.Ref
 
 val zeroi (i: int) : int ensures { result = 0 }
 
 let main (size: int) (loc: int) : unit
   requires { size > 0 /\ loc >= 0 /\ loc < size }
 = let a = init (size) (zeroi) in
   
   for index = 0 to size - 1 do
    invariant { index > loc -> a[loc] <> 0 }
    (* Also requires AltErgo *)
    if index = loc then
      a[index] <- 2
    else
      a[index] <- 0
   done;
   
   for index = 0 to size - 1 do
    invariant { true }
    if index = loc then
     assert { a[index] <> 0 }
   done

end
