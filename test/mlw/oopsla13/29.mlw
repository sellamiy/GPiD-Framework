module Oopsla29
 use int.Int
 use ref.Ref
 use int.EuclideanDivision

 val unknown1 (unit) : bool
 val unknown2 (unit) : bool

 let main (void) : unit diverges =
 let a = ref 1 in let b = ref 1 in
 let c = ref 2 in let d = ref 2 in
 let x = ref 3 in let y = ref 3 in

 while unknown1() do
  invariant { true }

  x := !a + !c;
  y := !b + !d;

  if mod (!x + !y) 2 = 0 then begin
   a := !a + 1;
   d := !d + 1;
  end else begin
   a := !a - 1
  end;

  while unknown2() do
   invariant { true }

   c := !c - 1;
   b := !b - 1;
  done
 done;

 assert { !a + !c = !b + !d }
end
