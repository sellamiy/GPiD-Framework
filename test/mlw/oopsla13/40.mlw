module Oopsla40
 use int.Int
 use ref.Ref
 use int.EuclideanDivision

 val unknown1 (unit) : bool
 val unknown2 (unit) : bool

 let main (flag: bool) : unit diverges =
 let i = ref 1 in let j = ref 1 in let a = ref 0 in let b = ref 0 in

 if flag then i := 0;

 while unknown1() do invariant { true }
  i := !i + 2;
  if mod !i 2 = 0 then j := !j + 2 else j := !j + 1
 done;

 while unknown2() do invariant { true }
  a := !a + 1;
  b := !b + (!j - !i)
 done;

 if flag then assert { !a = !b }

end
