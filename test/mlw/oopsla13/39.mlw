module Oopsla39
 use int.Int
 use ref.Ref

 val unknown (unit) : bool

 let main(maxpathlen: int) : unit
  requires { maxpathlen > 0 } diverges
 = let buf_off = ref 0 in

   let bound_off = ref (0 + (maxpathlen + 1) - 1) in
   let glob3_pathend_off = ref !buf_off in
   let glob3_pathlim_off = ref !bound_off in
   
   let glob3_dc = ref 0 in

   while ((not (!glob3_pathend_off + !glob3_dc >= !glob3_pathlim_off)) || not unknown()) do
    invariant { 0 <= !glob3_dc /\ !glob3_dc <= maxpathlen }
    glob3_dc := !glob3_dc + 1;
    assert { 0 <= !glob3_dc };
    assert { !glob3_dc < maxpathlen + 1 }
   done

end
