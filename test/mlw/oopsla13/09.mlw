module Oopsla09
 use int.Int
 use ref.Ref

 val unknowna (unit) : bool
 val unknownb (unit) : bool
 val unknownc (unit) : bool

 let main (pvlen_init: int) : unit
  diverges
 = let i = ref 0 in
   let pvlen = ref pvlen_init in
   let t = ref 0 in
   let j = ref 0 in
   let k = ref 0 in
   let n = ref 0 in

   while unknowna() do
    invariant { true }
    i := !i + 1;
   done;

   if !i > !pvlen then pvlen := !i;
   i := 0;

   while unknownb() do
    invariant { !k = !i }
    t := !i;
    i := !i + 1;
    k := !k + 1;
   done;

   n := !i;
   while !j < !n do
    invariant { !k + !j = !n }
    assert { !k >= 0 };
    k := !k - 1;
    i := !i - 1;
    j := !j + 1;
   done
end
