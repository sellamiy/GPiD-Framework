module Oopsla33
 use int.Int
 use ref.Ref

 val unknown1 (unit) : bool
 val unknown2 (unit) : bool
 val unknown3 (unit) : bool

 let main(k: int) : unit diverges
 = let z = ref k in let x = ref 0 in let y = ref 0 in

 while unknown1() do
  invariant { !x = !y /\ !z = k + !y }
  let c = ref 0 in
   while unknown2() do
    invariant { !x = !y /\ !z = k + !y - !c }

    if !z = k + !y - !c then begin

     x := !x + 1;
     y := !y + 1;
     c := !c + 1;

    end else begin

     x := !x + 1;
     y := !y - 1;
     c := !c + 1;

    end

   done;
   while unknown3() do
    invariant { !x = !y }

    x := !x - 1;
    y := !y - 1;

   done;
   z := k + !y
 done;

 assert { !x = !y }
end
